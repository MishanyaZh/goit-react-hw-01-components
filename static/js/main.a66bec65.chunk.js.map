{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FriendList/FrendListItem.styled.jsx","components/FriendList/FiendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Container/Container.jsx","components/App.styled.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","statsInfo","label","quantity","followers","views","likes","Item","styled","li","props","evtType","Label","span","Statistics","title","statistics","statlist","map","stat","percentage","id","prop","StatusOn","StatusOf","Avatar","img","Name","p","FriendListItem","isOnline","width","FriendList","friends","css","friendList","friend","TransactionHistory","transactions","transactionHistory","th","type","amount","currency","td","Container","children","mainContainer","MainContainer","div","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,UAAY,2BAA2B,MAAQ,uBAAuB,SAAW,4B,kBCA9UD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,GAAK,+BAA+B,GAAK,iC,4PCA/HD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,+B,mBCA3GD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,cAAgB,mC,6+FCErBC,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACrD,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBL,UAAWC,IAAEH,SACzD,mBAAGE,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,qBAAIC,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,uBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMU,eAEtC,qBAAIT,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMW,WAEtC,qBAAIV,UAAWC,IAAEK,UAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMY,kB,8BCrBjCC,EAAOC,IAAOC,GAAV,kNAUD,SAAAC,GAAK,OAAKA,EAAMC,SAAW,KAAO,SAAW,WAGhDC,EAAQJ,IAAOK,KAAV,oECZLC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOrB,EAAY,EAAZA,MAClC,OACE,0BAASC,UAAWC,IAAEoB,WAAtB,UACE,oBAAIrB,UAAWC,IAAEmB,MAAjB,SAAyBA,IAEzB,oBAAIpB,UAAWC,IAAEqB,SAAjB,SACGvB,EAAMwB,KAAI,SAAAC,GAAI,OACb,eAACZ,EAAD,CAAMI,QAASQ,EAAKC,WAApB,UACE,cAACR,EAAD,UAAQO,EAAKjB,QACb,eAACU,EAAD,CAAOjB,UAAWC,IAAEwB,WAApB,UAAiCD,EAAKC,WAAtC,SAFmCD,EAAKE,aCRvCd,EAAOC,IAAOC,GAAV,4VAcC,SAAAa,GAAI,OAAKA,EAAKX,QAAL,iCAKdY,EAAWf,IAAOK,KAAV,yIAQRW,EAAWhB,IAAOK,KAAV,iIAQRY,EAASjB,IAAOkB,IAAV,sHAONC,EAAOnB,IAAOoB,EAAV,iDC1CJC,EAAiB,SAAC,GAAoC,IAAlCR,EAAiC,EAAjCA,GAAIS,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,OAAQH,EAAW,EAAXA,KACrD,OAEE,cADA,CACC,EAAD,CAAMqB,QAASmB,EAAf,UACGA,EACC,cAACP,EAAD,UAAWO,IAEX,cAACN,EAAD,UAAWM,IAGb,cAACL,EAAD,CAAQ1B,IAAKN,EAAQO,IAAKV,EAAMyC,MAAM,OAEtC,cAACJ,EAAD,UAAOrC,MATqB+B,I,iBCFrBW,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,oBAAItC,UAAWuC,IAAIC,WAAnB,SACGF,EAAQf,KAAI,SAAAkB,GAAM,OACjB,cAAC,EAAD,CAEEN,SAAUM,EAAON,SACjBrC,OAAQ2C,EAAO3C,OACfH,KAAM8C,EAAO9C,MAHR8C,EAAOf,U,gBCNTgB,EAAqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnC,OACE,wBAAO3C,UAAWuC,IAAIK,mBAAtB,UACE,gCACE,+BACE,oBAAI5C,UAAWuC,IAAIM,GAAnB,kBACA,oBAAI7C,UAAWuC,IAAIM,GAAnB,oBACA,oBAAI7C,UAAWuC,IAAIM,GAAnB,2BAIJ,gCACGF,EAAapB,KAAI,gBAAGG,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OAChB,+BACE,oBAAIhD,UAAWuC,IAAIU,GAAnB,SAAwBH,IACxB,oBAAI9C,UAAWuC,IAAIU,GAAnB,SAAwBF,IACxB,oBAAI/C,UAAWuC,IAAIU,GAAnB,SAAwBD,MAHjBtB,Y,iBCTJwB,EALG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKnD,UAAWC,IAAEmD,cAAlB,SAAkCD,KCA9BE,EAAgBxC,IAAOyC,IAAV,sF,+BCYbC,EAAM,WACjB,OAEE,aADA,CACCF,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE1D,KAAM6D,EAAK7D,KACXC,IAAK4D,EAAK5D,IACVC,SAAU2D,EAAK3D,SACfC,OAAQ0D,EAAK1D,OACbC,MAAOyD,EAAKzD,QAEd,cAAC,EAAD,CAAYqB,MAAM,eAAerB,MAAO0D,IACxC,cAAC,EAAD,CAAYnB,QAASA,IACrB,cAAC,EAAD,CAAoBK,aAAcA,UCxB1Ce,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a66bec65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__xI6Dr\",\"profile\":\"Profile_profile__u1bli\",\"avatar\":\"Profile_avatar__305Ig\",\"name\":\"Profile_name__c9pf1\",\"tag\":\"Profile_tag__3LDeM\",\"location\":\"Profile_location__2sN2q\",\"stats\":\"Profile_stats__19Fio\",\"statsInfo\":\"Profile_statsInfo__1yHnu\",\"label\":\"Profile_label__17S-A\",\"quantity\":\"Profile_quantity__11Eoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1Rgv2\",\"th\":\"TransactionHistory_th__J3Vt7\",\"td\":\"TransactionHistory_td__3VoxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__YK_Ik\",\"title\":\"Statistics_title__ujRI-\",\"statlist\":\"Statistics_statlist__3qIWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__32KRz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Container_mainContainer__3l8Lx\"};","import s from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsInfo}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.statsInfo}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.statsInfo}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n","// The @emotion/styled\nimport styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 62px;\n  height: 60px;\n\n  border: 1px solid black;\n  background: ${props => (props.evtType <= '20' ? 'tomato' : 'green')};\n`;\n\nexport const Label = styled.span`\n  margin-bottom: 5px;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport { Item, Label } from './Statistics.styled';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>{title}</h2>\n\n      <ul className={s.statlist}>\n        {stats.map(stat => (\n          <Item evtType={stat.percentage} key={stat.id}>\n            <Label>{stat.label}</Label>\n            <Label className={s.percentage}>{stat.percentage}%</Label>\n          </Item>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","// The @emotion/styled\nimport styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  padding-left: 10px;\n  margin-bottom: 5px;\n  width: 150px;\n\n  cursor: pointer;\n  border: 1px solid rgb(150, 135, 135);\n  background: rgb(10, 238, 200);\n\n  &:hover {\n    background: ${prop => (prop.evtType ? `rgb(121, 241, 137)` : `tomato`)};\n    border: 1px solid rgb(230, 118, 14);\n  }\n`;\n\nexport const StatusOn = styled.span`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: greenyellow;\n`;\n\nexport const StatusOf = styled.span`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: red;\n`;\n\nexport const Avatar = styled.img`\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 700;\n`;\n","// import css from './FriendList.module.css';\nimport { Item, StatusOn, StatusOf, Avatar, Name } from './FrendListItem.styled';\n\nexport const FriendListItem = ({ id, isOnline, avatar, name }) => {\n  return (\n    // evtType={isOnline} add props for hover\n    <Item evtType={isOnline} key={id}>\n      {isOnline ? (\n        <StatusOn>{isOnline}</StatusOn>\n      ) : (\n        <StatusOf>{isOnline}</StatusOf>\n      )}\n\n      <Avatar src={avatar} alt={name} width=\"48\" />\n\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { FriendListItem } from './FiendListItem';\nimport css from './FriendList.module.css';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          isOnline={friend.isOnline}\n          avatar={friend.avatar}\n          name={friend.name}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport css from './TransactionHistory.module.css';\n\nexport const TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={css.transactionHistory}>\n      <thead>\n        <tr>\n          <th className={css.th}>Type</th>\n          <th className={css.th}>Amount</th>\n          <th className={css.th}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td className={css.td}>{type}</td>\n            <td className={css.td}>{amount}</td>\n            <td className={css.td}>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.mainContainer}>{children}</div>;\n};\n\n// defolt export\nexport default Container;\n","// The @emotion/styled\nimport styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  width: 320px;\n  padding: 60px;\n  background: orange;\n`;\n","import { Profile } from './Profile/Profile';\nimport { Statistics } from './Statistics/Statistics';\nimport { FriendList } from './FriendList/FriendList';\nimport { TransactionHistory } from './TransactionHistory/TransactionHistory';\n//import defoltnogo eksporu\nimport Container from './Container/Container';\n\n// The @emotion/styled\nimport { MainContainer } from './App.styled';\n\nimport user from './Profile/user.json';\nimport statisticalData from './Statistics/statistical-data.json';\nimport friends from './FriendList/friends.json';\nimport transactions from './TransactionHistory/transaction.json';\n\nexport const App = () => {\n  return (\n    // The @emotion/styled\n    <MainContainer>\n      <Container>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <FriendList friends={friends} />\n        <TransactionHistory transactions={transactions} />\n      </Container>\n    </MainContainer>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}